{"ast":null,"code":"var _jsxFileName = \"/Users/sophia/Desktop/ReactJS/weather-app/src/App.js\";\nimport React from \"react\";\nimport Info from \"./components/info\";\nimport Form from \"./components/form\";\nimport Weather from \"./components/weather\";\nconst API_KEY = \"2769cbb0fb6aa2eb5d78eb5490ada007\"; // grab yours from OpenWeatherMap\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temp: undefined,\n      city: undefined,\n      country: undefined,\n      pressure: undefined,\n      sunset: undefined,\n      error: undefined\n    };\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n\n      if (city) {\n        const api_url = await fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \"&appid=\").concat(API_KEY, \"&units=metric\"));\n        const data = await api_url.json();\n        var sunset = data.sys.sunset;\n        var date = new Date();\n        date.setTime(sunset);\n        var sunset_date = date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\n        this.setState({\n          temp: data.main.temp,\n          city: data.name,\n          country: data.sys.country,\n          pressure: data.main.pressure,\n          sunset: sunset_date,\n          error: undefined\n        });\n      } else {\n        this.setState({\n          temp: undefined,\n          city: undefined,\n          country: undefined,\n          pressure: undefined,\n          sunset: undefined,\n          error: \"Please enter city's name\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Info, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Form, {\n      weatherMethod: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      temp: this.state.temp,\n      city: this.state.city,\n      country: this.state.country,\n      pressure: this.state.pressure,\n      sunset: this.state.sunset,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sophia/Desktop/ReactJS/weather-app/src/App.js"],"names":["React","Info","Form","Weather","API_KEY","App","Component","state","temp","undefined","city","country","pressure","sunset","error","getWeather","e","preventDefault","target","elements","value","api_url","fetch","data","json","sys","date","Date","setTime","sunset_date","getHours","getMinutes","getSeconds","setState","main","name","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,MAAMC,OAAO,GAAG,kCAAhB,C,CAAoD;;AACpD,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAElCC,KAFkC,GAE1B;AACNC,MAAAA,IAAI,EAAEC,SADA;AAENC,MAAAA,IAAI,EAAED,SAFA;AAGNE,MAAAA,OAAO,EAAEF,SAHH;AAING,MAAAA,QAAQ,EAAEH,SAJJ;AAKNI,MAAAA,MAAM,EAAEJ,SALF;AAMNK,MAAAA,KAAK,EAAEL;AAND,KAF0B;;AAAA,SAWlCM,UAXkC,GAWrB,MAAOC,CAAP,IAAa;AACxBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMP,IAAI,GAAGM,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBT,IAAlB,CAAuBU,KAApC;;AAGA,UAAGV,IAAH,EAAS;AACN,cAAMW,OAAO,GAAG,MAAMC,KAAK,6DAAsDZ,IAAtD,oBAAoEN,OAApE,mBAA3B;AACA,cAAMmB,IAAI,GAAG,MAAMF,OAAO,CAACG,IAAR,EAAnB;AAEA,YAAIX,MAAM,GAAGU,IAAI,CAACE,GAAL,CAASZ,MAAtB;AACA,YAAIa,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACAD,QAAAA,IAAI,CAACE,OAAL,CAAaf,MAAb;AACA,YAAIgB,WAAW,GAAGH,IAAI,CAACI,QAAL,KAAkB,GAAlB,GAAwBJ,IAAI,CAACK,UAAL,EAAxB,GAA4C,GAA5C,GAAkDL,IAAI,CAACM,UAAL,EAApE;AAED,aAAKC,QAAL,CAAc;AACZzB,UAAAA,IAAI,EAAEe,IAAI,CAACW,IAAL,CAAU1B,IADJ;AAEZE,UAAAA,IAAI,EAAEa,IAAI,CAACY,IAFC;AAGZxB,UAAAA,OAAO,EAAEY,IAAI,CAACE,GAAL,CAASd,OAHN;AAIZC,UAAAA,QAAQ,EAAEW,IAAI,CAACW,IAAL,CAAUtB,QAJR;AAKZC,UAAAA,MAAM,EAAEgB,WALI;AAMZf,UAAAA,KAAK,EAAEL;AANK,SAAd;AAQH,OAjBC,MAiBK;AACL,aAAKwB,QAAL,CAAc;AACRzB,UAAAA,IAAI,EAAEC,SADE;AAERC,UAAAA,IAAI,EAAED,SAFE;AAGRE,UAAAA,OAAO,EAAEF,SAHD;AAIRG,UAAAA,QAAQ,EAAEH,SAJF;AAKRI,UAAAA,MAAM,EAAEJ,SALA;AAMRK,UAAAA,KAAK,EAAE;AANC,SAAd;AAQD;AACA,KA3CiC;AAAA;;AA6ChCsB,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,IAAD;AAAM,MAAA,aAAa,EAAE,KAAKrB,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGA,oBAAC,OAAD;AACA,MAAA,IAAI,EAAE,KAAKR,KAAL,CAAWC,IADjB;AAEA,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWG,IAFjB;AAGA,MAAA,OAAO,EAAE,KAAKH,KAAL,CAAWI,OAHpB;AAIA,MAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWK,QAJrB;AAKA,MAAA,MAAM,EAAE,KAAKL,KAAL,CAAWM,MALnB;AAMA,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWO,KANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,CADF;AAcD;;AA5D+B;;AA+DlC,eAAeT,GAAf","sourcesContent":["import React from \"react\";\nimport Info from \"./components/info\";\nimport Form from \"./components/form\";\nimport Weather from \"./components/weather\";\n\nconst API_KEY = \"2769cbb0fb6aa2eb5d78eb5490ada007\"; // grab yours from OpenWeatherMap\nclass App extends React.Component {\n\nstate = {\n  temp: undefined,\n  city: undefined,\n  country: undefined,\n  pressure: undefined,\n  sunset: undefined,\n  error: undefined\n}\n\ngetWeather = async (e) => {\n  e.preventDefault();\n  const city = e.target.elements.city.value;\n \n  \n  if(city) {\n     const api_url = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\n     const data = await api_url.json();\n\n     var sunset = data.sys.sunset;\n     var date = new Date();\n     date.setTime(sunset);\n     var sunset_date = date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\n\n    this.setState({\n      temp: data.main.temp,\n      city: data.name,\n      country: data.sys.country,\n      pressure: data.main.pressure,\n      sunset: sunset_date,\n      error: undefined\n  });\n} else {\n  this.setState({\n        temp: undefined,\n        city: undefined,\n        country: undefined,\n        pressure: undefined,\n        sunset: undefined,\n        error: \"Please enter city's name\"\n  })\n}\n}\n\n  render() {\n    return (\n      <div>\n      <Info />\n      <Form weatherMethod={this.getWeather} />\n      <Weather \n      temp={this.state.temp}\n      city={this.state.city}\n      country={this.state.country}\n      pressure={this.state.pressure}\n      sunset={this.state.sunset}\n      error={this.state.error}\n       />\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}