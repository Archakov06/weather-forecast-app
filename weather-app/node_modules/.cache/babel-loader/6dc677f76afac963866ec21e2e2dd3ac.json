{"ast":null,"code":"var _jsxFileName = \"/Users/sophia/Desktop/ReactJS/weather-app/src/App.js\";\nimport React from \"react\";\nimport Info from \"./components/info\";\nimport Form from \"./components/form\";\nimport Weather from \"./components/weather\";\nconst API_KEY = \"2769cbb0fb6aa2eb5d78eb5490ada007\"; // grab yours from OpenWeatherMap\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temp: undefined,\n      city: undefined,\n      country: undefined,\n      pressure: undefined,\n      sunset: undefined,\n      error: undefined\n    };\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n\n      if (city) {\n        const api_url = await fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \"&appid=\").concat(API_KEY, \"&units=metric\"));\n        const data = await api_url.json();\n        var sunset = data.sys.sunset;\n        var date = new Date();\n        date.setTime(sunset);\n        var sunset_date = date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\n        this.setState({\n          temp: data.main.temp,\n          city: data.name,\n          country: data.sys.country,\n          pressure: data.main.pressure,\n          sunset: sunset_date,\n          error: undefined\n        });\n      } else {\n        this.setState({\n          temp: undefined,\n          city: undefined,\n          country: undefined,\n          pressure: undefined,\n          sunset: undefined,\n          error: \"Please enter city's name\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(Info, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sophia/Desktop/ReactJS/weather-app/src/App.js"],"names":["React","Info","Form","Weather","API_KEY","App","Component","state","temp","undefined","city","country","pressure","sunset","error","getWeather","e","preventDefault","target","elements","value","api_url","fetch","data","json","sys","date","Date","setTime","sunset_date","getHours","getMinutes","getSeconds","setState","main","name","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,MAAMC,OAAO,GAAG,kCAAhB,C,CAAoD;;AACpD,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAE9BC,KAF8B,GAEtB;AACJC,MAAAA,IAAI,EAAEC,SADF;AAEJC,MAAAA,IAAI,EAAED,SAFF;AAGJE,MAAAA,OAAO,EAAEF,SAHL;AAIJG,MAAAA,QAAQ,EAAEH,SAJN;AAKJI,MAAAA,MAAM,EAAEJ,SALJ;AAMJK,MAAAA,KAAK,EAAEL;AANH,KAFsB;;AAAA,SAW9BM,UAX8B,GAWjB,MAAMC,CAAN,IAAY;AACrBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMP,IAAI,GAAGM,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBT,IAAlB,CAAuBU,KAApC;;AAGA,UAAIV,IAAJ,EAAU;AACN,cAAMW,OAAO,GAAG,MAAMC,KAAK,6DAAsDZ,IAAtD,oBAAoEN,OAApE,mBAA3B;AACA,cAAMmB,IAAI,GAAG,MAAMF,OAAO,CAACG,IAAR,EAAnB;AAEA,YAAIX,MAAM,GAAGU,IAAI,CAACE,GAAL,CAASZ,MAAtB;AACA,YAAIa,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACAD,QAAAA,IAAI,CAACE,OAAL,CAAaf,MAAb;AACA,YAAIgB,WAAW,GAAGH,IAAI,CAACI,QAAL,KAAkB,GAAlB,GAAwBJ,IAAI,CAACK,UAAL,EAAxB,GAA4C,GAA5C,GAAkDL,IAAI,CAACM,UAAL,EAApE;AAEA,aAAKC,QAAL,CAAc;AACVzB,UAAAA,IAAI,EAAEe,IAAI,CAACW,IAAL,CAAU1B,IADN;AAEVE,UAAAA,IAAI,EAAEa,IAAI,CAACY,IAFD;AAGVxB,UAAAA,OAAO,EAAEY,IAAI,CAACE,GAAL,CAASd,OAHR;AAIVC,UAAAA,QAAQ,EAAEW,IAAI,CAACW,IAAL,CAAUtB,QAJV;AAKVC,UAAAA,MAAM,EAAEgB,WALE;AAMVf,UAAAA,KAAK,EAAEL;AANG,SAAd;AAQH,OAjBD,MAiBO;AACH,aAAKwB,QAAL,CAAc;AACVzB,UAAAA,IAAI,EAAEC,SADI;AAEVC,UAAAA,IAAI,EAAED,SAFI;AAGVE,UAAAA,OAAO,EAAEF,SAHC;AAIVG,UAAAA,QAAQ,EAAEH,SAJA;AAKVI,UAAAA,MAAM,EAAEJ,SALE;AAMVK,UAAAA,KAAK,EAAE;AANG,SAAd;AAQH;AACJ,KA3C6B;AAAA;;AA4C9BsB,EAAAA,MAAM,GAAG;AACL,WAAS,oBACL,IADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAT;AAGH;;AAhD6B;;AAoDlC,eAAe/B,GAAf","sourcesContent":["import React from \"react\";\nimport Info from \"./components/info\";\nimport Form from \"./components/form\";\nimport Weather from \"./components/weather\";\n\nconst API_KEY = \"2769cbb0fb6aa2eb5d78eb5490ada007\"; // grab yours from OpenWeatherMap\nclass App extends React.Component {\n\n    state = {\n        temp: undefined,\n        city: undefined,\n        country: undefined,\n        pressure: undefined,\n        sunset: undefined,\n        error: undefined\n    }\n\n    getWeather = async(e) => {\n        e.preventDefault();\n        const city = e.target.elements.city.value;\n\n\n        if (city) {\n            const api_url = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\n            const data = await api_url.json();\n\n            var sunset = data.sys.sunset;\n            var date = new Date();\n            date.setTime(sunset);\n            var sunset_date = date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\n\n            this.setState({\n                temp: data.main.temp,\n                city: data.name,\n                country: data.sys.country,\n                pressure: data.main.pressure,\n                sunset: sunset_date,\n                error: undefined\n            });\n        } else {\n            this.setState({\n                temp: undefined,\n                city: undefined,\n                country: undefined,\n                pressure: undefined,\n                sunset: undefined,\n                error: \"Please enter city's name\"\n            })\n        }\n    }\n    render() {\n        return ( <\n            Info / >\n        )\n    }\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}